import time
import random
import re
import shutil

import paramiko
import os
import xlsxwriter
from bs4 import BeautifulSoup
import time
from multiprocessing import Pool


class Haproxy(object):
    def __init__(self):
        ####change
        self.status_dict = {}
        self.status = True
       ####change
        self.host_list = [
            # '120.78.211.75',  # 祖师/祖母号
            # '39.108.49.89',  # 1/2号
            # '111.230.180.146',  # 3/4号
            # '118.24.11.151',  # 5/6号
            # '111.230.173.15',  # 7/8号
            # #'139.159.186.172',  # 9/10号
            # #'139.159.188.243',  # 11/12号
            # '139.159.235.109',  # 13/14号
            # '139.159.226.251',  # 15/16号
            # '139.159.237.121',  # 17/18号
            # '139.159.240.48',  # 19/20号
            # '139.159.213.120',  # 21/22号
            # '139.159.141.56',  # 23/24号
            # '139.159.236.133',  # 25/26号
            # '139.159.136.164',  # 27/28号
            # '139.159.140.99',  # 29/30号
            # # #new
            #  '139.159.138.95',  # 31/32号
            # '139.159.138.238',  # 33/34号
            # '139.159.140.92',  # 35/36号
            # '139.159.233.19',  # 37/38号
            # '139.159.230.123',  # 39/40号
            # '139.159.137.240',  # 41/42号
            # '139.159.141.135',  # 43/44号
            # #'118.24.236.107',  # 45/46号
            # #'118.24.236.228',  # 47/48号
            # #'118.24.194.94',  # 49/50号
            # ##update on 2018.10.16
            # '139.159.181.238',# 51/52号
            # '139.159.177.67',# 53/54号
            # '139.159.190.48',# 55/56号
            # '139.159.186.93',# 57/58号
            # '139.159.191.6',# 59/60号
            # '139.159.186.225',# 61/62号
            #  '139.159.176.231',# 63/64号
            # '139.159.189.198',# 65/66号
            # #update on 2018.10.30
            # '139.159.184.11',#67/68号
            # '139.159.191.55',#69/70号
            # # update on 2018.11.13
            # #'139.159.180.85',  # 71/72号
            # #'139.159.190.235',  # 73/74号
            # # update on 2018.11.22
            # #'139.159.190.160',  # 75/76号
            # #'139.159.183.4',  # 77/78号
            # #'139.159.183.204',  # 79/80号
            # #update on 2019.01.31
            # #'139.159.179.140',  # 81/82号
            # #'139.159.184.56',  # 83/84号
            # #'139.159.185.72',  # 85/86号
            # #'139.159.186.113',  # 87/88号
            # #'139.159.177.64',  # 89/90号
            # #'139.159.189.226',  # 91/92号
            # #'139.159.178.14',  # 93/94号
            # #'139.159.189.51',  # 95/96号
            # #'139.159.182.150',  # 97/98号
            # #update on 2019.03.19
            # #'139.159.180.75',  # 099/100号
            # #'139.159.184.248',  # 101/102号
            # #'139.159.179.28',  # 103/104号
            # #'139.159.184.245',  # 105/106号
            # #'139.159.187.233',  # 107/108号
            # #'139.159.183.69',  # 109/110号
            # #'139.159.179.117',  # 111/112号
            # #'139.159.189.145',  # 113/114号
            # #'139.159.184.202',  # 115/116号
            # #'139.159.182.174',  # 117/118号
            # #'139.159.180.12',  # 119/120号
            # #'139.159.188.11',  # 121/122号
            # #'139.159.180.16',  # 123/124号
            # #'139.159.180.192',  # 125/126号
            # #'139.159.178.169',  # 127/128号
            # #'139.159.189.188',  # 129/130号
            # #'139.159.188.43',  # 131/132号
            # #'139.159.181.136',  # 133/134号
            # #'139.159.176.8',  # 135/136号
            # #'139.159.190.228',  # 137/138号
            # #'139.159.190.177',  # 139/140号
            # #'139.159.186.230',  # 141/142号
            # #update on 2019.03.19
            # #'139.159.179.249',  # 143/144号
            # #'139.159.186.168',  # 145/146号
            # #'139.159.184.237',  # 147/148号
            # #'139.159.182.47',  # 149/150号
            # #'139.159.189.224',  # 151/152号
            # #'139.159.182.204',  # 153/154号
            # #'139.159.177.172',  # 155/156号
            # #update on 2019.08.06
            # '139.155.72.190',  #  45/46号
            # '148.70.231.139',  #  47/48号
            # '139.155.74.195',  #  49/50号
            # # update on 2019.09.03
            # '139.155.45.66',   #   9/10号
            # '139.155.37.27',   #   11/12号
            # '139.155.48.233',  #  71/72号
            # '111.231.203.241', # 73/74号
            # '139.155.45.135',  # 75/76号
            # '148.70.132.144',  # 77/78号
            # '45.40.199.35',  #  79/80号
            # '139.155.39.10',  #  81/82号
            # '139.155.69.245',  #  83/84号
            # '139.155.46.46',  #  85/86号
            # # update on 2019.09.04
            # '139.155.45.162',  #  87/88号
            # '139.155.3.169',  #  89/90号
            # '148.70.14.78',  #  91/92号
            # '139.155.44.127',  #93/94号
            # '139.155.44.173',  #  95/96号
            # '139.155.7.30',  #  97/98号
            # '139.155.45.71',  #  99/100号
            # '139.155.7.133',  #  101/102号
            # '139.155.8.126',  #  103/104号
            # '139.155.71.132',  #  105/106号
            # # update on 2019.09.05
            # '129.28.81.22',  #  107/108号
            # '129.28.52.235',  #  109/110号
            # '129.28.126.67',  #  111/112号
            # '139.155.102.155',  #113/114号
            # '129.28.140.100',  #  115/116号
            # '129.28.54.254',  #  117/118号
            # '129.28.58.222',  #  119/120号
            # '139.155.146.172',  #121/122号
            # '129.28.126.99',  #  123/124号
            # '129.28.130.135',  #  125/126号
            # # update on 2019.09.06
            # '49.235.165.135',  #  127/128号
            # '49.235.166.154',  #  129/130号
            # '49.235.166.198',  #  131/132号
            # '49.235.157.254',  #133/134号
            # '49.235.166.158',  #  135/136号
            # '49.235.165.193',  #  137/138号
            # '49.235.167.83',  #  139/140号
            # '49.235.167.70',  #141/142号
            # '49.235.163.130',  #  143/144号
            # '49.235.100.109',  #  145/146号
            # '49.235.167.13',  #  147/148号
            # '49.235.165.77',  #  149/150号
            '49.235.101.231',  #151/152号
            # '49.235.101.173',  #  153/154号
            # '49.235.103.47',  #  155/156号
        ]
        self.host_dict = {
            # '120.78.211.75': ("祖师号/祖母号", 1),
            # '39.108.49.89': ("1号/2号", 2),
            # '111.230.180.146': ("3号/4号", 3),
            # '118.24.11.151': ("5号/6号", 4),
            # '111.230.173.15': ("7号/8号", 5),
            # #'139.159.186.172': ("9号/10号", 6),
            # #'139.159.188.243': ("11号/12号", 7),
            # '139.159.235.109': ("13号/14号", 8),
            # '139.159.226.251': ("15号/16号", 9),
            # '139.159.237.121': ("17号/18号", 10),
            # '139.159.240.48': ("19号/20号", 11),
            # '139.159.213.120': ("21号/22号", 12),
            # '139.159.141.56': ("23号/24号", 13),
            # '139.159.236.133': ("25号/26号", 14),
            # '139.159.136.164': ("27号/28号", 15),
            # '139.159.140.99': ("29号/30号", 16),
            # # new
            # '139.159.138.95': ("31号/32号", 17),
            # '139.159.138.238': ("33号/34号", 18),
            # '139.159.140.92': ("35号/36号", 19),
            # '139.159.233.19': ("37号/38号", 20),
            # '139.159.230.123': ("39号/40号", 21),
            # '139.159.137.240': ("41号/42号", 22),
            # '139.159.141.135': ("43号/44号", 23),
            # #'118.24.236.107': ("45号/46号", 24),
            # #'118.24.236.228': ("47号/48号", 25),
            # #'118.24.194.94': ("49号/50号", 26),
            # ##update on 2018.10.16
            # '139.159.181.238': ("51号/52号", 27),
            # '139.159.177.67': ("53号/54号", 28),
            # '139.159.190.48': ("55号/56号", 29),
            # '139.159.186.93': ("57号/58号", 30),
            # '139.159.191.6': ("59号/60号", 31),
            # '139.159.186.225': ("61号/62号", 32),
            # '139.159.176.231': ("63号/64号", 33),
            # '139.159.189.198': ("65号/66号", 34),
            # # update on 2018.10.30
            # '139.159.184.11': ('67号/68号', 35),
            # '139.159.191.55': ('69号/70号', 36),
            # #'139.159.180.85': ('71号/72号', 37),
            # #'139.159.190.235': ('73号/74号', 38),
            # # update on 2018.11.22
            # #'139.159.190.160': ('75号/76号', 39),
            # #'139.159.183.4': ('77号/78号', 40),
            # #'139.159.183.204': ('79号/80号', 41),
            # # update on 2019.01.31
            # #'139.159.179.140': ('81号/82号', 42),
            # #'139.159.184.56': ('83号/84号', 43),
            # #'139.159.185.72': ('85号/86号', 44),
            # #'139.159.186.113': ('87号/88号', 45),
            # #'139.159.177.64': ('89号/90号', 46),
            # #'139.159.189.226': ('91号/92号', 47),
            # #'139.159.178.14': ('93号/94号', 48),
            # #'139.159.189.51': ('95号/96号', 49),
            # #'139.159.182.150': ('97号/98号', 50),
            # #update on 2019.03.19
            # #'139.159.180.75': ('099号/100号', 51),
            # #'139.159.184.248': ('101号/102号', 52),
            # #'139.159.179.28': ('103号/104号', 53),
            # #'139.159.184.245': ('105号/106号', 54),
            # #'139.159.187.233': ('107号/108号', 55),
            # #'139.159.183.69': ('109号/110号', 56),
            # #'139.159.179.117': ('111号/112号', 57),
            # #'139.159.189.145': ('113号/114号', 58),
            # #'139.159.184.202': ('115号/116号', 59),
            # #'139.159.182.174': ('117号/118号', 60),
            # #'139.159.180.12': ('119号/120号', 61),
            # #'139.159.188.11': ('121号/122号', 62),
            # #'139.159.180.16': ('123号/124号', 63),
            # #'139.159.180.192': ('125号/126号', 64),
            # #'139.159.178.169': ('127号/128号', 65),
            # #'139.159.189.188': ('129号/130号', 66),
            # #'139.159.188.43': ('131号/132号', 67),
            # #'139.159.181.136': ('133号/134号', 68),
            # #'139.159.176.8': ('135号/136号', 69),
            # #'139.159.190.228': ('137号/138号', 70),
            # #'139.159.190.177': ('139号/140号', 71),
            # #'139.159.186.230': ('141号/142号', 72),
            # #update on 2019.04.06
            # # '139.159.179.249': ('143号/144号', 73),
            # # '139.159.186.168': ('145号/146号', 74),
            # # '139.159.184.237': ('147号/148号', 75),
            # # '139.159.182.47': ('149号/150号', 76),
            # # '139.159.189.224': ('151号/152号', 77),
            # # '139.159.182.204': ('153号/154号', 78),
            # # '139.159.177.172': ('155号/156号', 79),
            # # #update on 2019.08.06
            # '139.155.72.190': ("45号/46号", 24),
            # '148.70.231.139': ("47号/48号", 25),
            # '139.155.74.195': ("49号/50号", 26),
            # # update on 2019.09.03
            # '139.155.45.66': ("9号/10号", 6),
            # '139.155.37.27': ("11号/12号", 7),
            # '139.155.48.233': ('71号/72号', 37),
            # '111.231.203.241': ('73号/74号', 38),
            # '139.155.45.135': ('75号/76号', 39),
            # '148.70.132.144': ('77号/78号', 40),
            # '45.40.199.35': ('79号/80号', 41),
            # '139.155.39.10': ('81号/82号', 42),
            # '139.155.69.245': ('83号/84号', 43),
            # '139.155.46.46': ('85号/86号', 44),
            # # update on 2019.09.04
            # '139.155.45.162': ('87号/88号', 45),
            # '139.155.3.169': ('89号/90号', 46),
            # '148.70.14.78': ('91号/92号', 47),
            # '139.155.44.127': ('93号/94号', 48),
            # '139.155.44.173': ('95号/96号', 49),
            # '139.155.7.30': ('97号/98号', 50),
            # '139.155.45.71': ('099号/100号', 51),
            # '139.155.7.133': ('101号/102号', 52),
            # '139.155.8.126': ('103号/104号', 53),
            # '139.155.71.132': ('105号/106号', 54),
            # # update on 2019.09.06
            # '129.28.81.22': ('107号/108号', 55),
            # '129.28.52.235': ('109号/110号', 56),
            # '129.28.126.67': ('111号/112号', 57),
            # '139.155.102.155': ('113号/114号', 58),
            # '129.28.140.100': ('115号/116号', 59),
            # '129.28.54.254': ('117号/118号', 60),
            # '129.28.58.222': ('119号/120号', 61),
            # '139.155.146.172': ('121号/122号', 62),
            # '129.28.126.99': ('123号/124号', 63),
            # '129.28.130.135': ('125号/126号', 64),
            # # update on 2019.09.06
            # '49.235.165.135': ('127号/128号', 65),
            # '49.235.166.154': ('129号/130号', 66),
            # '49.235.166.198': ('131号/132号', 67),
            # '49.235.157.254': ('133号/134号', 68),
            # '49.235.166.158': ('135号/136号', 69),
            # '49.235.165.193': ('137号/138号', 70),
            # '49.235.167.83': ('139号/140号', 71),
            # '49.235.167.70': ('141号/142号', 72),
            # '49.235.163.130': ('143号/144号', 73),
            # '49.235.100.109': ('145号/146号', 74),
            # '49.235.167.13': ('147号/148号', 75),
            # '49.235.165.77': ('149号/150号', 76),
            '49.235.101.231': ('151号/152号', 77),
            # '49.235.101.173': ('153号/154号', 78),
            # '49.235.103.47': ('155号/156号', 79),

            
         
        }
        self.port = 22
        self.username = 'tenew'
        self.pwd = 'zslc0000'
        self.__k = None

    def working(self, host ):
        self.connect(host)
        status_dict = self.execute_exe(host )
        self.close()

        return status_dict

    def callback_update(self , status_dict):
        self.status_dict.update(status_dict)

    def run(self):


        host_nums = len(self.host_list)
        ssh_pool = Pool(host_nums)
        # rslt = ssh_pool.map(self.working, self.host_list)
        # self.status_dict.update(rslt)
        #
        for host in self.host_list:
            temp = ssh_pool.apply_async(self.working, args=(host,), callback=self.callback_update)
        ssh_pool.close()
        ssh_pool.join()
        # print(rslt)
        self.joined_file()
        self.status = False

    def connect(self, one_host):
        transport = paramiko.Transport((one_host, self.port))
        transport.connect(username=self.username, password=self.pwd)
        self.__transport = transport

    def close(self):
        self.__transport.close()

    ###更新运行状态字典
    def update_status_dict(self, host, exec_result ):
        status_dict ={}
        machines = self.host_dict[host][0].split('/')
        for machine in machines:
            if machine == '祖师号':
                symbol = ""
            elif machine == '祖母号':
                symbol = "0"
            else:
                symbol = machine[:-1]
            if 'fanlibao' + symbol + '  success!' not in exec_result:
                # 没有成功运行exe
                status_dict[machine] = "运行程序失败"
            else:
                if re.search(machine + r'.*提现信息.xls uploaded!', exec_result):
                    # 成功运行exe且上传成功
                    status_dict[machine] = "提现成功"
                else:
                    # 成功运行exe但是没有文件
                    status_dict[machine] = "无人提现"
        return  status_dict

    def execute_exe(self, host ):
        ssh = paramiko.SSHClient()
        ssh._transport = self.__transport
        # 执行命令
        #cmd = [
        #    'cmd /c "cd C:\\Users\\Administrator\\Desktop\\transfer_to_oa  & enable_close_RDP.bat & transfer_to_oa_v1.4.exe & disable_close_RDP.bat"']
        cmd = ['cmd /c "cd C:\\Users\\Administrator\\Desktop\\transfer_to_oa  & enable_close_RDP.bat & transfer_to_oa_v2.exe & disable_close_RDP.bat"']
        #cmd = ['cmd /c "cd C:\\Users\\Administrator\\Desktop\\transfer_to_oa  & enable_close_RDP.bat & test_for_click.exe & disable_close_RDP.bat"']
        # cmd = ['cmd /c "cd C:\\Users\\Administrator\\Desktop\\transfer_to_oa & enable_close_RDP.bat & python test.py"']
        stdin, stdout, stderr = ssh.exec_command(cmd[0])
        #time.sleep(5)
        # 记录输出
        exec_result = stdout.read().decode('gbk')
        log_file_name = time.strftime('%Y{y}%m{m}%d{d}', time.localtime()).format(y='年', m='月', d='日')
        flog = open(r"C:\\Users\\Administrator\\Desktop\\log\\"+log_file_name+"_log.txt", 'a')
        now_time = time.strftime('%Y{y}%m{m}%d{d} %H{h}%M{f}%S{s}\n', time.localtime()).format(y='年', m='月', d='日',
                                                                                               h='时', f='分', s='秒')
        # now_time = time.strftime("%Y-%m-%d %H-%M-%S\n", time.localtime())
        machine = self.host_dict[host][0]
        flog.write("**********************\n" + machine + "\n" + now_time)
        flog.write(exec_result)
        flog.close()

        return self.update_status_dict(host, exec_result)

    def xmlfile(self, file, path):
        fopen = open(path + file, 'r', encoding='gbk', errors='replace')
        Machine_num = file[:file.find('号')]
        text = fopen.read()
        fopen.close()
        soup = BeautifulSoup(text, 'lxml')
        items = soup.find_all('th')
        datavalue = []
        for i in range(13, len(items), 9):
            tempdata = [float(items[i + 2].text), items[i + 1].text, '返利到账', items[i].text, Machine_num]
            datavalue.append(tempdata)
        return datavalue

    def joined_file(self):
        # 定义要合并的excel文件列表
        path = r'C:\\Users\\Administrator\\Desktop\\transfer_files\\'
        new_path = r'C:\\Users\\Administrator\\Desktop\\backup_data\\'
        dstfile = r'C:\\Users\\Administrator\\Desktop\\record_joined_file\\joined_file.xls'
        filelist = os.listdir(path)
        for temp in filelist:
            os.rename(path + temp, path + temp[:-4] + '.txt')
        filelist = os.listdir(path)
        if len(filelist) == 0:
            return 0
        else:
            # 存储所有读取的结果
            datavalue = [['金额' , '账户' ,'姓名' ,'交易编号' ,'设备号']]
            for fl in filelist:
                datavalue.extend(self.xmlfile(fl, path))
            now_time = time.strftime('%Y{y}%m{m}%d{d} %H{h}%M{f}%S{s}', time.localtime()).format(y='年', m='月', d='日',
                                                                                                 h='时', f='分', s='秒')
            # now_time = time.strftime("%Y-%m-%d %H-%M-%S", time.localtime())
            endfile = path + now_time + '_joined_file.xls'
            workbook = xlsxwriter.Workbook(endfile)
            worksheet = workbook.add_worksheet()
            row = 0
            for D in datavalue:
                col = 0
                for item in D:
                    worksheet.write(row, col, item)
                    col += 1
                row += 1
            workbook.close()

            # 替换record_joined_file的文件
            shutil.copyfile(endfile, dstfile)

            # 将文件全部放到backup备份
            filelist = os.listdir(path)
            for temp in filelist:
                shutil.move(path + temp, new_path + temp)

#
# print("文件合并完成")
# ha = Haproxy()
# ha.run()


# class Haproxy(object):
#     def __init__(self):
#         self.res_dict = {}
#         self.t = ['1号', '2号', '3号', '4号', '5号', '6号', '7号', '8号', '9号']
#
#         self.status = True
#
#     def run(self):
#         for i in self.t:
#             self.execute_exe(i)
#         self.status = False
#
#     def execute_exe(self, host):
#         l = ['下载器出错', '下载完成', '无人提现']
#         self.res_dict[host] = l[random.randint(0, 2)]
#         time.sleep(random.randint(1, 3))

